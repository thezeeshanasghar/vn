name: Deploy to EC2

on:
  push:
    branches: [master]
  workflow_dispatch: # Allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -i ~/.ssh/deploy_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Navigate to application directory
            cd ${{ secrets.APP_DIRECTORY }}
            
            # Pull latest code
            git pull origin ${{ github.ref_name }}
            
            # Stop existing containers
            docker-compose down
            
            # Remove old images (optional, to save disk space)
            docker system prune -f
            
            # Build and start containers
            docker-compose up -d --build
            
            # Show running containers
            docker-compose ps
            
            echo "Deployment completed successfully!"
          EOF

      - name: Verify deployment
        run: |
          echo "Waiting for services to start..."
          sleep 10
          
          # Check if backend is running
          ssh -i ~/.ssh/deploy_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "docker exec vaccine-backend node -e \"require('http').get('http://localhost:3000/api/health', (res) => { console.log('Backend Health:', res.statusCode === 200 ? 'OK' : 'FAILED'); process.exit(res.statusCode === 200 ? 0 : 1) })\""
          
          echo "âœ… All services are running!"

